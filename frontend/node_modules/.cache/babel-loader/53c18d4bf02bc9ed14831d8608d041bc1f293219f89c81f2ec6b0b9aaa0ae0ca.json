{"ast":null,"code":"var _jsxFileName = \"/home/akyii/fleet/frontend/src/components/VehicleList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:8000\";\nconst VehicleList = () => {\n  _s();\n  const [vehicles, setVehicles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await fetch(`${API_URL}/vehicles/odoo`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setVehicles(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVehicles();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading vehicles...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading vehicles: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Odoo Vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), vehicles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No vehicles found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: vehicles.map((vehicle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [vehicle.name, \" - \", vehicle.license_plate]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VehicleList, \"gogqKFQHRH0QRHxrh6n8o+Hep6o=\");\n_c = VehicleList;\nexport default VehicleList;\nvar _c;\n$RefreshReg$(_c, \"VehicleList\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_BASE_URL","VehicleList","_s","vehicles","setVehicles","loading","setLoading","error","setError","fetchVehicles","response","fetch","ok","Error","status","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","vehicle","index","name","license_plate","_c","$RefreshReg$"],"sources":["/home/akyii/fleet/frontend/src/components/VehicleList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:8000\";\n\nconst VehicleList = () => {\n  const [vehicles, setVehicles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await fetch(`${API_URL}/vehicles/odoo`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setVehicles(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVehicles();\n  }, []);\n\n  if (loading) return <p>Loading vehicles...</p>;\n  if (error) return <p>Error loading vehicles: {error}</p>;\n\n  return (\n    <div>\n      <h2>Odoo Vehicles</h2>\n      {vehicles.length === 0 ? (\n        <p>No vehicles found.</p>\n      ) : (\n        <ul>\n          {vehicles.map((vehicle, index) => (\n            <li key={index}>\n              {vehicle.name} - {vehicle.license_plate}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default VehicleList;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAE7E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,OAAO,gBAAgB,CAAC;QACxD,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC9C;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCZ,WAAW,CAACW,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOT,OAAA;IAAAuB,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC9C,IAAIhB,KAAK,EAAE,oBAAOX,OAAA;IAAAuB,QAAA,GAAG,0BAAwB,EAACZ,KAAK;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAExD,oBACE3B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBpB,QAAQ,CAACqB,MAAM,KAAK,CAAC,gBACpB5B,OAAA;MAAAuB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzB3B,OAAA;MAAAuB,QAAA,EACGhB,QAAQ,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B/B,OAAA;QAAAuB,QAAA,GACGO,OAAO,CAACE,IAAI,EAAC,KAAG,EAACF,OAAO,CAACG,aAAa;MAAA,GADhCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA3CID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}